name: Test


on:
  workflow_dispatch:
    

jobs:

  # build:
  #   name: Build
  #   runs-on: ubuntu-latest
  
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2

  #   - name: Set Node.js 18.x
  #     uses: actions/setup-node@v1
  #     with:
  #       node-version: 18.x

  #   - name: Install dependencies
  #     run: npm ci

  #   - name: Compile
  #     run: npm run build

    
  changeApproval:
    name: ServiceNow Change Approval
    # needs: build
    runs-on: ubuntu-latest

    steps:     
      # - name: ServiceNow Change Approval
      #   uses: kunalgangaher17/DevOps-Change-custom-action@main
      #   with:
      #     devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
      #     devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
      #     instance-url: ${{ secrets.SN_INSTANCE_URL }}
      #     tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
      #     context-github: ${{ toJSON(github) }}
      #     job-name: 'ServiceNow Change Approval'
      #     change-request: '{"setCloseCode":"true","attributes":{"short_description":"Automated Software Deployment","description":"Automated Software Deployment.","assignment_group":"a715cd759f2002002920bde8132e7018","implementation_plan":"Software update is tested and results can be found in Test Summaries Tab; When the change is approved the implementation happens automated by the CICD pipeline within the change planned start and end time window.","backout_plan":"When software fails in production, the previous software release will be re-deployed.","test_plan":"Testing if the software was successfully deployed"}}'
      #     interval: '100'
      #     timeout: '3600'
      #     changeCreationTimeOut: '3600'
      #     abortOnChangeCreationFailure: true
      #     abortOnChangeStepTimeout: true
      
      # - name: ServiceNow DevOps Sonar Scan Results
      #   uses: kunalgangaher17/DevOps-Custom-sonar@main
      #   with:
      #     devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
      #     devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
      #     instance-url: ${{ secrets.SN_INSTANCE_URL }}
      #     tool-id: ${{ secrets.SN_SONAR_TOOL_ID }}
      #     context-github: ${{ toJSON(github) }}
      #     job-name: 'Build'
      #     sonar-host-url: ${{ secrets.SONAR_URL }}
      #     sonar-project-key: ${{ secrets.SONAR_PROJECT_KEY }}

      # - name: ServiceNow DevOps Unit Test Results
      #   uses: kunalgangaher17/DevOps-Custom-test-report@main
      #   with:
      #     devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
      #     devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
      #     instance-url: ${{ secrets.SN_INSTANCE_URL }}
      #     tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
      #     context-github: ${{ toJSON(github) }}
      #     job-name: 'Build'
      #     xml-report-filename: target/surefire-reports/testng-results.xml

      # - name: ServiceNow DevOps Security Results
      #   uses: kunalgangaher17/DevOps-Custom-security-result@main
      #   with:
      #     devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
      #     devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
      #     instance-url: ${{ secrets.SN_INSTANCE_URL }}
      #     tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
      #     context-github: ${{ toJSON(github) }}
      #     job-name: 'Deploy'
      #     security-result-attributes:  '{"scanner":"Veracode","applicationName":"azure","buildVersion":"jenkins-Veracode with Step-27"}'

      # - name: ServiceNow Update Change
      #   uses: kunalgangaher17/DevOps-Custom-update-change@main
      #   with:
      #     devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
      #     devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
      #     instance-url: ${{ secrets.SN_INSTANCE_URL }}
      #     context-github: ${{ toJSON(github) }}
      #     change-request-number: 'CHG123456'
      #     change-request-details: '{"short_description":"Automated Software Deployment","description":"Automated Software Deployment.","assignment_group":"a715cd759f2002002920bde8132e7018","implementation_plan":"Software update is tested and results can be found in Test Summaries Tab; When the change is approved the implementation happens automated by the CICD pipeline within the change planned start and end time window.","backout_plan":"When software fails in production, the previous software release will be re-deployed.","test_plan":"Testing if the software was successfully deployed"}'
          
      # - name: ServiceNow Get Change
      #   uses: kunalgangaher17/DevOps-Custom-Get-Change@main
      #   with:
      #     devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
      #     devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
      #     instance-url: ${{ secrets.SN_INSTANCE_URL }}
      #     tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
      #     context-github: ${{ toJSON(github) }}
      #     change-details: '{"build_number":"21","pipeline_name":"CI_Pipeline","stage_name":"Create_Change"}'

      - name: ServiceNow Register Package
        uses: kunalgangaher17/DevOps-Custom-Register-Package@main
        with:
          devops-integration-token: ${{ secrets.SN_DEVOPS_INTEGRATION_TOKEN }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: 'Register Package'
          artifacts: '[{"name": "com:customactiondemo","version": "1.${{ github.run_number }}","semanticVersion": "1.${{ github.run_number }}.0","repositoryName": "${{ github.repository }}"}]'
          package-name: 'registerpackage.war'

      - name: ServiceNow Register Artifact
        uses: kunalgangaher17/DevOps-custom-action-register-artifact@main
        with:
          devops-integration-token: ${{ secrets.SN_DEVOPS_INTEGRATION_TOKEN }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: 'Register Artifact'
          artifacts: '[{"name": "com:customactiondemo","version": "1.${{ github.run_number }}","semanticVersion": "1.${{ github.run_number }}.0","repositoryName": "${{ github.repository }}"}]'
          
  deploy:
    name: Deploy
    needs: changeApproval
    runs-on: ubuntu-latest

    steps:     
      - name: Run Deployment Script
        run: echo "Deployment Finished....."
